{"version":3,"file":"static/js/async/my-modern-app/page.a7c875ad.js","mappings":"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","sources":["webpack://my-modern-app/./src/routes/my-modern-app/page.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nasync function getImg(path: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = path;\n    img.onload = () => {\n      resolve(img);\n    };\n    img.onerror = err => {\n      reject(err);\n    };\n  });\n}\n\nfunction transtion(num: number) {\n  return num * 2;\n}\n\ntype CameraType = 'user' | 'environment';\ntype StateType = {\n  isUse?: boolean;\n  // 闪光灯\n  track?: MediaStreamTrack | null;\n  isUseTorch?: boolean;\n  trackStatus?: boolean;\n};\ntype WatermarkType = {\n  type: string;\n  url?: string;\n  text?: string;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  color?: string;\n  fontSize?: number;\n};\n\nconst watermark: WatermarkType[] = [\n  {\n    type: 'text',\n    text: '测试水印',\n    x: 10,\n    y: 10,\n    color: '#000',\n    fontSize: 20,\n  },\n];\nfunction Camera() {\n  const [state, setState] = useState<StateType>({\n    isUse: false,\n    track: null,\n    isUseTorch: false,\n    trackStatus: false,\n  });\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasBox = useRef<HTMLDivElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const cameraCanvasRef = useRef<HTMLCanvasElement>(null);\n  const canvas2dRef = useRef<CanvasRenderingContext2D | null>(null);\n  const cameraCanvas2dRef = useRef<CanvasRenderingContext2D | null>(null);\n\n  const [cameraExact, setCameraExact] = useState<CameraType>('environment');\n\n  const handleShutter = () => {\n    cameraCanvas2dRef.current?.drawImage(\n      videoRef.current as HTMLVideoElement,\n      0,\n      0,\n      videoRef.current?.videoWidth as number,\n      videoRef.current?.videoHeight as number,\n    );\n    const img = cameraCanvasRef.current?.toDataURL('image/png');\n    setImgUrl(img as string);\n  };\n  const handleTrach = () => {\n    setState(s => {\n      // state.track?.applyConstraints({\n      //   advanced: [{ torch: !s.trackStatus }],\n      // });\n      return {\n        trackStatus: !s.trackStatus,\n      };\n    });\n  };\n  const closeCamera = () => {\n    if (videoRef.current?.srcObject) {\n      (videoRef.current.srcObject as MediaStream).getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n  };\n\n  const makeWatermark = async (ctx2d: CanvasRenderingContext2D) => {\n    if (watermark.length === 0) {\n      return;\n    }\n    for (const item of watermark) {\n      switch (item.type) {\n        case 'img': {\n          const [getImgErr, { path: imgPath }] = [false, { path: '' }];\n          if (getImgErr) {\n            throw new Error(`${item.url} 没有找到`);\n          }\n          const img = await getImg(imgPath);\n          ctx2d.drawImage(\n            img,\n            item.x,\n            item.y,\n            item.width || 0,\n            item.height || 0,\n          );\n          break;\n        }\n        case 'text': {\n          const color = item.color || '#000';\n          const fontSize = item.fontSize || 16;\n\n          ctx2d.fillStyle = color;\n          ctx2d.font = `${fontSize}px normal`;\n          item?.text && ctx2d.fillText(item.text, item.x, item.y);\n          break;\n        }\n        default:\n          // do nothing\n          break;\n      }\n    }\n  };\n  const openScan = async () => {\n    const width = transtion(\n      document.documentElement.clientWidth || document.body.clientWidth,\n    );\n    const height = transtion(\n      document.documentElement.clientHeight || document.body.clientHeight,\n    );\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const videoDevices = devices.filter(device => device.kind === 'videoinput');\n    if (videoDevices.length === 0) {\n      console.error('设备不支持');\n      return;\n    }\n\n    console.log('videoDevices', videoDevices);\n\n    const videoParam = {\n      audio: false,\n      video: {\n        facingMode: cameraExact,\n        width: { min: 1, ideal: Math.floor(width / 3), max: width },\n        height: { min: 1, ideal: Math.floor(height / 3), max: height },\n      },\n    };\n    navigator.mediaDevices\n      .getUserMedia(videoParam)\n      .then(stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.setAttribute('playsinline', 'true');\n          videoRef.current.setAttribute('webkit-playsinline', 'true');\n          videoRef.current.play();\n          makeWatermark(canvas2dRef.current as CanvasRenderingContext2D);\n          const videoTrack = stream.getVideoTracks()[0];\n          console.log('Constraints', videoTrack.getConstraints());\n          console.log('Capabilities', videoTrack.getCapabilities());\n          console.log('Settings', videoTrack.getSettings());\n\n          setState({\n            isUse: true,\n            track: stream.getVideoTracks()[0],\n          });\n          setTimeout(() => {\n            setState({\n              isUseTorch:\n                (state.track?.getCapabilities() as any)?.torch || false,\n            });\n          }, 500);\n        }\n      })\n      .catch(err => {\n        console.error('设备不支持', err);\n      });\n  };\n  useEffect(() => {\n    if (location.protocol !== 'https:') {\n      console.error('请使用https协议');\n    }\n    if (canvasRef.current) {\n      canvas2dRef.current = canvasRef.current.getContext('2d');\n    }\n    if (cameraCanvasRef.current) {\n      cameraCanvas2dRef.current = cameraCanvasRef.current?.getContext('2d');\n    }\n    openScan();\n    return () => {\n      closeCamera();\n    };\n  }, []);\n\n  const handleSwitch = () => {\n    setCameraExact(s => {\n      return s === 'environment' ? 'user' : 'environment';\n    });\n    closeCamera();\n    openScan();\n  };\n\n  return (\n    <div>\n      <div ref={canvasBox} className=\"relative\">\n        <div className=\"fixed top-2 right-2 p-2 z-20\" onClick={handleSwitch}>\n          Switch\n        </div>\n        <div className=\"trach-box\" onClick={handleTrach}>\n          trach\n        </div>\n        <div className=\"fixed bottom-0 left-0 w-full flex items-center justify-center bg-transparent z-40\">\n          <a\n            className=\"flex items-center justify-center w-8 h-8 rounded-full bg-slate-900 text-white\"\n            onClick={handleShutter}\n          >\n            拍\n          </a>\n        </div>\n        <video ref={videoRef} className=\"h-full w-full fixed left-0 top-0\" />\n        <canvas\n          ref={canvasRef}\n          id=\"canvas\"\n          className=\"h-full w-full fixed left-0 top-0\"\n        />\n        <canvas\n          ref={cameraCanvasRef}\n          id=\"camera-canvas\"\n          className=\"h-full w-full fixed left-0 top-0 hidden\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Camera;\n"],"names":["getImg","_x","_getImg","apply","arguments","_asyncToGenerator","path","Promise","resolve","reject","img","Image","src","onload","onerror","err","transtion","num","watermark","type","text","x","y","color","fontSize","state","setState","useState","isUse","track","isUseTorch","trackStatus","imgUrl","setImgUrl","videoRef","useRef","canvasBox","canvasRef","cameraCanvasRef","canvas2dRef","cameraCanvas2dRef","cameraExact","setCameraExact","closeCamera","_videoRef$current3","current","srcObject","getTracks","forEach","stop","makeWatermark","_ref","ctx2d","length","item","getImgErr","imgPath","Error","url","drawImage","width","height","fillStyle","font","fillText","_x2","openScan","_ref2","document","documentElement","clientWidth","body","clientHeight","videoDevices","navigator","mediaDevices","enumerateDevices","filter","device","kind","console","error","log","videoParam","audio","video","facingMode","min","ideal","Math","floor","max","getUserMedia","then","stream","setAttribute","play","videoTrack","getVideoTracks","getConstraints","getCapabilities","getSettings","setTimeout","_state$track","torch","catch","useEffect","_cameraCanvasRef$curr2","location","protocol","getContext","_jsx","children","_jsxs","ref","className","onClick","handleSwitch","s","handleTrach","handleShutter","_cameraCanvas2dRef$cu","_videoRef$current","_videoRef$current2","_cameraCanvasRef$curr","videoWidth","videoHeight","toDataURL","id"],"sourceRoot":""}