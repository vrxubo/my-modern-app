{"version":3,"file":"static/js/async/my-modern-app/page.9129fa5b.js","mappings":"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","sources":["webpack://my-modern-app/./src/routes/my-modern-app/page.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Alert } from '@/components/ui/alert';\n\nasync function getImg(path: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = path;\n    img.onload = () => {\n      resolve(img);\n    };\n    img.onerror = err => {\n      reject(err);\n    };\n  });\n}\n\nfunction transtion(num: number) {\n  return num * 2;\n}\n\ntype CameraType = 'user' | 'environment';\ntype StateType = {\n  isUse?: boolean;\n  // 闪光灯\n  track?: MediaStreamTrack | null;\n  isUseTorch?: boolean;\n  trackStatus?: boolean;\n};\ntype WatermarkType = {\n  type: string;\n  url?: string;\n  text?: string;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  color?: string;\n  fontSize?: number;\n};\n\nconst watermark: WatermarkType[] = [\n  {\n    type: 'text',\n    text: '测试水印',\n    x: 10,\n    y: 10,\n    color: '#000',\n    fontSize: 20,\n  },\n];\nfunction Camera() {\n  const [state, setState] = useState<StateType>({\n    isUse: false,\n    track: null,\n    isUseTorch: false,\n    trackStatus: false,\n  });\n  const [imgUrl, setImgUrl] = useState<string>('');\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasBox = useRef<HTMLDivElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const cameraCanvasRef = useRef<HTMLCanvasElement>(null);\n  const canvas2dRef = useRef<CanvasRenderingContext2D | null>(null);\n  const cameraCanvas2dRef = useRef<CanvasRenderingContext2D | null>(null);\n\n  const [cameraExact, setCameraExact] = useState<CameraType>('environment');\n\n  const handleShutter = () => {\n    cameraCanvas2dRef.current?.drawImage(\n      videoRef.current as HTMLVideoElement,\n      0,\n      0,\n      videoRef.current?.videoWidth as number,\n      videoRef.current?.videoHeight as number,\n    );\n    const img = cameraCanvasRef.current?.toDataURL('image/png');\n    setImgUrl(img as string);\n  };\n  const handleTrach = () => {\n    setState(s => {\n      // state.track?.applyConstraints({\n      //   advanced: [{ torch: !s.trackStatus }],\n      // });\n      return {\n        trackStatus: !s.trackStatus,\n      };\n    });\n  };\n  const closeCamera = () => {\n    if (videoRef.current?.srcObject) {\n      (videoRef.current.srcObject as MediaStream).getTracks().forEach(track => {\n        track.stop();\n      });\n    }\n  };\n\n  const makeWatermark = async (ctx2d: CanvasRenderingContext2D) => {\n    if (watermark.length === 0) {\n      return;\n    }\n    for (const item of watermark) {\n      switch (item.type) {\n        case 'img': {\n          const [getImgErr, { path: imgPath }] = [false, { path: '' }];\n          if (getImgErr) {\n            throw new Error(`${item.url} 没有找到`);\n          }\n          const img = await getImg(imgPath);\n          ctx2d.drawImage(\n            img,\n            item.x,\n            item.y,\n            item.width || 0,\n            item.height || 0,\n          );\n          break;\n        }\n        case 'text': {\n          const color = item.color || '#000';\n          const fontSize = item.fontSize || 16;\n\n          ctx2d.fillStyle = color;\n          ctx2d.font = `${fontSize}px normal`;\n          item?.text && ctx2d.fillText(item.text, item.x, item.y);\n          break;\n        }\n        default:\n          // do nothing\n          break;\n      }\n    }\n  };\n  const openScan = async () => {\n    const width = transtion(\n      document.documentElement.clientWidth || document.body.clientWidth,\n    );\n    const height = transtion(\n      document.documentElement.clientHeight || document.body.clientHeight,\n    );\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const videoDevices = devices.filter(device => device.kind === 'videoinput');\n    if (videoDevices.length === 0) {\n      console.error('设备不支持');\n      return;\n    }\n\n    const videoParam = {\n      audio: false,\n      video: {\n        diviceId: videoDevices[0].deviceId,\n        aspectRatio: width / height,\n        // facingMode: cameraExact,\n        width,\n        height,\n      },\n    };\n    navigator.mediaDevices\n      .getUserMedia(videoParam)\n      .then(stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          videoRef.current.setAttribute('playsinline', 'true');\n          videoRef.current.setAttribute('webkit-playsinline', 'true');\n          videoRef.current.play();\n          makeWatermark(canvas2dRef.current as CanvasRenderingContext2D);\n          const videoTrack = stream.getVideoTracks()[0];\n          console.log('Constraints', videoTrack.getConstraints());\n          console.log('Capabilities', videoTrack.getCapabilities());\n          console.log('Settings', videoTrack.getSettings());\n\n          setState({\n            isUse: true,\n            track: stream.getVideoTracks()[0],\n          });\n          setTimeout(() => {\n            setState({\n              isUseTorch:\n                (state.track?.getCapabilities() as any)?.torch || false,\n            });\n          }, 500);\n        }\n      })\n      .catch(err => {\n        console.error('设备不支持', err);\n      });\n  };\n  useEffect(() => {\n    if (location.protocol !== 'https:') {\n      console.error('请使用https协议');\n    }\n    if (canvasRef.current) {\n      canvas2dRef.current = canvasRef.current.getContext('2d');\n    }\n    if (cameraCanvasRef.current) {\n      cameraCanvas2dRef.current = cameraCanvasRef.current?.getContext('2d');\n    }\n    openScan();\n    return () => {\n      closeCamera();\n    };\n  }, []);\n\n  const handleSwitch = () => {\n    setCameraExact(s => {\n      return s === 'environment' ? 'user' : 'environment';\n    });\n    closeCamera();\n    openScan();\n  };\n\n  return (\n    <div>\n      <div ref={canvasBox} className=\"relative\">\n        <div className=\"fixed top-2 right-2 p-2 z-20\" onClick={handleSwitch}>\n          Switch\n        </div>\n        <div className=\"trach-box\" onClick={handleTrach}>\n          trach\n        </div>\n        <div className=\"fixed bottom-0 left-0 w-full flex items-center justify-center bg-transparent z-40\">\n          <a\n            className=\"flex items-center justify-center w-8 h-8 rounded-full bg-slate-900 text-white\"\n            onClick={handleShutter}\n          >\n            拍\n          </a>\n        </div>\n        <video ref={videoRef} className=\"h-full w-full fixed left-0 top-0\" />\n        <canvas\n          ref={canvasRef}\n          id=\"canvas\"\n          className=\"h-full w-full fixed left-0 top-0\"\n        />\n        <canvas\n          ref={cameraCanvasRef}\n          id=\"camera-canvas\"\n          className=\"h-full w-full fixed left-0 top-0 hidden\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Camera;\n"],"names":["getImg","_x","_getImg","apply","arguments","_asyncToGenerator","path","Promise","resolve","reject","img","Image","src","onload","onerror","err","transtion","num","watermark","type","text","x","y","color","fontSize","state","setState","useState","isUse","track","isUseTorch","trackStatus","imgUrl","setImgUrl","videoRef","useRef","canvasBox","canvasRef","cameraCanvasRef","canvas2dRef","cameraCanvas2dRef","cameraExact","setCameraExact","closeCamera","_videoRef$current3","current","srcObject","getTracks","forEach","stop","makeWatermark","_ref","ctx2d","length","item","getImgErr","imgPath","Error","url","drawImage","width","height","fillStyle","font","fillText","_x2","openScan","_ref2","document","documentElement","clientWidth","body","clientHeight","videoDevices","navigator","mediaDevices","enumerateDevices","filter","device","kind","console","error","videoParam","audio","video","diviceId","deviceId","aspectRatio","getUserMedia","then","stream","setAttribute","play","videoTrack","getVideoTracks","log","getConstraints","getCapabilities","getSettings","setTimeout","_state$track","torch","catch","useEffect","_cameraCanvasRef$curr2","location","protocol","getContext","_jsx","children","_jsxs","ref","className","onClick","handleSwitch","s","handleTrach","handleShutter","_cameraCanvas2dRef$cu","_videoRef$current","_videoRef$current2","_cameraCanvasRef$curr","videoWidth","videoHeight","toDataURL","id"],"sourceRoot":""}