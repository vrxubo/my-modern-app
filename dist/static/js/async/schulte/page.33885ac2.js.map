{"version":3,"file":"static/js/async/schulte/page.33885ac2.js","mappings":"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","sources":["webpack://my-modern-app/./src/components/ui/alert.tsx","webpack://my-modern-app/./src/components/ui/button.tsx","webpack://my-modern-app/./src/components/ui/dialog.tsx","webpack://my-modern-app/./src/routes/schulte/page.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = 'Alert';\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn('mb-1 font-medium leading-none tracking-tight', className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = 'AlertTitle';\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm [&_p]:leading-relaxed', className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertTitle, AlertDescription };\n","import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        xs: 'h-7 rounded-md px-3',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n","import * as React from 'react';\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","import { useEffect, useRef, useState } from 'react';\n// import { useMachine } from '@xstate/react';\n// import { createMachine } from 'xstate';\nimport { RocketIcon } from '@radix-ui/react-icons';\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\n\n// const toggleMachine = createMachine({\n//   id: 'toggle',\n//   initial: 'inactive',\n//   states: {\n//     inactive: {\n//       on: { TOGGLE: 'active' },\n//     },\n//     active: {\n//       on: { TOGGLE: 'inactive' },\n//     },\n//   },\n// });\n\nconst colVariants: { [key in number]: string } = {\n  3: 'grid-cols-3',\n  4: 'grid-cols-4',\n  5: 'grid-cols-5',\n  6: 'grid-cols-6',\n  7: 'grid-cols-7',\n  8: 'grid-cols-8',\n  9: 'grid-cols-9',\n};\n\nfunction Schulte({ level = 3 }: { level: number }) {\n  const start = useRef(0);\n  const consuming = useRef<string>('');\n  const [status, setStatus] = useState<'ready' | 'playing' | 'end'>('ready');\n  const [result, setResult] = useState<Array<number>>([]);\n  const gridData = useRef<Array<number>>(\n    Array(level * level)\n      .fill(0)\n      .map((_, i) => i + 1),\n  );\n  const handleClick = (v: number) => {\n    if (v === result.length + 1) {\n      setResult([...result, v]);\n    }\n  };\n\n  useEffect(() => {\n    if (result.length === level * level) {\n      const total = Date.now() - start.current;\n      consuming.current = `${Math.floor(total / 1000)} S.${total % 1000}`;\n      setStatus('end');\n    }\n  }, [result]);\n\n  useEffect(() => {\n    if (status === 'playing') {\n      start.current = Date.now();\n      gridData.current = Array(level * level)\n        .fill(0)\n        .map((_, i) => i + 1)\n        .sort(() => Math.random() - 0.5);\n      setResult([]);\n    }\n  }, [status]);\n\n  const colCls = status === 'playing' ? colVariants[level] : 'grid-cols-1';\n\n  return (\n    <div className=\"p-2\">\n      <Alert className=\"bg-orange-200 mb-2\">\n        <RocketIcon className=\"h-4 w-4\" />\n        <AlertTitle>Schulte</AlertTitle>\n        <AlertDescription>以最快的速度从1点到{level * level}</AlertDescription>\n      </Alert>\n      <div className={`grid gap-1 max-w-2xl ${colCls}`}>\n        {status === 'ready' && (\n          <span\n            onClick={() => setStatus('playing')}\n            className=\"aspect-square flex items-center justify-center text-4xl font-bold text-white select-none bg-sky-300\"\n            key={0}\n          >\n            开始\n          </span>\n        )}\n        {status === 'playing' &&\n          gridData.current.map(item => (\n            <span\n              onClick={() => handleClick(item)}\n              className={`aspect-square flex items-center justify-center text-4xl font-bold text-white select-none ${\n                result.includes(item) ? 'bg-sky-500' : 'bg-sky-300'\n              }`}\n              key={item}\n            >\n              {item}\n            </span>\n          ))}\n        {status === 'end' && (\n          <span\n            onClick={() => setStatus('playing')}\n            className=\"aspect-square flex items-center justify-center text-4xl font-bold text-white select-none bg-sky-300\"\n            key={0}\n          >\n            重新开始\n          </span>\n        )}\n      </div>\n      <Dialog open={status === 'end'} onOpenChange={() => setStatus('ready')}>\n        <DialogContent className=\"w-1/2 rounded-xl\">\n          <div className=\"flex items-center justify-center p-1  text-base\">\n            耗时：{consuming.current}\n          </div>\n          <div className=\"text-center\">\n            <Button onClick={() => setStatus('playing')}>再来一次</Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Schulte;\n"],"names":["alertVariants","cva","variants","variant","default","destructive","defaultVariants","Alert","React","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","cn","displayName","AlertTitle","_ref2","_excluded2","AlertDescription","_ref3","_excluded3","buttonVariants","outline","secondary","ghost","link","size","xs","sm","lg","icon","Button","asChild","Comp","Slot","Dialog","DialogPrimitive","DialogPortal","DialogOverlay","DialogContent","children","_jsxs","X","_ref5","_excluded5","_ref6","_excluded6","colVariants","level","start","useRef","consuming","status","setStatus","useState","result","setResult","gridData","Array","fill","map","_","i","useEffect","length","total","Date","now","current","Math","floor","sort","random","colCls","RocketIcon","onClick","item","v","includes","open","onOpenChange"],"sourceRoot":""}